import telebot
import data
import keyboard
from functions import create_monster
import random
import time
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

bot = telebot.TeleBot('6459858653:AAFGB9cj7PY9wiKGtIFEZfTtqLAvxb8PrD8') #–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É

@bot.message_handler(commands = ['start' , 'help']) # @ - –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä(–ø—Ä–æ–≤–µ—Ä–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
def start_command(message):
    user_name = message.chat.first_name # –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.chat.id
    text_message = (f"–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é —Ç–µ–±—è, {user_name}!"
            f"–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –†–ü–ì –∏–≥—Ä—É. "
            f" –ù–∞–∂–º–∏ –Ω–∞ '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É' –¥–ª—è –∑–∞–ø—É—Å–∫–∞")   
    markup = keyboard.start_game()
    bot.send_message(user_id, text_message, reply_markup = markup)

@bot.callback_query_handler(func=lambda call: True) #–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è inline –∫–Ω–æ–ø–∫–∏
def get_call_back(call):
    global user_name, user_hp, user_dmg, user_race, user_class

    user_id = call.from_user.id
    user_name = call.from_user.first_name
    message_id = call.message.message_id
    bot.delete_message(chat_id = user_id, message_id = message_id)
    if call.data == 'start_game': #–≤—ã–±–æ—Ä —Ä–∞—Å—ã
        markup = keyboard.race_kb()
        bot.send_message(chat_id = user_id, 
                         text = '–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é —Ç–µ–±—è, –∏–≥—Ä–æ–∫. –í—ã–±–µ—Ä–∏ —Ä–∞—Å—É: ',
                          reply_markup = markup)
    elif call.data in data.races: #—Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º —Ä–∞—Å—ã
        markup = keyboard.raceback_kb()
        user_race = call.data
        user_hp = data.race_hp[call.data]
        user_dmg = data.race_dmg[call.data]
        bot.send_message(chat_id = user_id, 
                         text = f'–¢–≤–æ—è —Ä–∞—Å–∞: {user_race}, –∑–¥–æ—Ä–æ–≤—å–µ‚ù§Ô∏è: {user_hp}, —É—Ä–æ–Ωüí™: {user_dmg}.',
                         reply_markup = markup)
    if call.data == 'choose_class': #–≤—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞
        markup = keyboard.class_kb()
        bot.send_message(chat_id = user_id, 
                         text = f'–í—ã–±–µ—Ä–∏ –∫–ª–∞—Å—Å, {user_name}!',
                         reply_markup = markup)
    elif call.data in data.classes:
        markup = keyboard.confrim_start()
        user_class = call.data
        user_hp = data.class_hp[call.data] + data.race_hp[user_race]
        user_dmg = data.class_dmg[call.data] + data.race_dmg[user_race]
        bot.send_message(chat_id = user_id, 
                         text = f'–¢–≤–æ–π –∫–ª–∞—Å—Å: {user_class}, –∑–¥–æ—Ä–æ–≤—å–µ‚ù§Ô∏è: {user_hp}, —É—Ä–æ–Ωüí™: {user_dmg}.',
                         reply_markup = markup)
    if call.data == 'confrim_start' : #–Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã
        markup = keyboard.begining_fght()
        monster_name, monster_dmg, monster_hp = create_monster()
        bot.send_message(chat_id = user_id, 
                         text = f'–ù–∞ —Å–≤–æ—ë–º –ø—É—Ç–∏ —Ç—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª –º–æ–Ω—Å—Ç—Ä–∞üëπ:  {monster_name}, –∑–¥–æ—Ä–æ–≤—å–µ: {monster_hp}, —É—Ä–æ–Ω: {monster_dmg}!\n–ñ–µ–ª–∞–µ—à—å –ª–∏ —Ç—ã —Å—Ä–∞–∑–∏—Ç—å—Å—è?',
                         reply_markup = markup)
    if call.data == 'fight':
        
    
        

        


 
bot.polling(non_stop=True)
